[{"title":"服务器终端使用教程","date":"2022-11-27T04:00:00.000Z","url":"/2022/11/27/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BB%88%E7%AB%AF%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","content":"进入服务器终端的方式有很多种，不同方式之间并无区别，选择最合适的即可。 进入服务器终端 Jupyter中启动终端 本地SSH连接进入终端 网页命令行 常用终端操作重要提示SSH连接遇到网络波动时会中断，前台运行的进程会被终止。 如果程序没有挂到后台或代码没有保存断点的话，您的程序很有可能因此白跑。 因此如果需要长时间运行程序，请务必使用nohup或screen挂到后台运行，并建议在代码中设置保存断点。 方法一：运行命令改为 nohup 原命令 &amp;，输出在nohup.out文件中方法二：(推荐!) 在运行程序前 先在终端中输入 screen -SL 会话名 -Logfile 日志名 新建会话 会话名与日志名自定。需要在运行程序前启动screen，开始运行后无法操作 之后输入需要执行的命令(如python 文件名.py)。输入 screen -dr 会话名 恢复会话；程序输出可恢复会话或查看日志文件 常用命令当前目录在使用服务器终端的过程中，需要留意终端的当前目录。 在zsh中会以黄色字体显示当前目录，如下图红箭头所指的位置。如果没有显示，可以输入pwd查询当前路径 默认的终端目录应该为主目录/home/mist/，也就是~/。~与/home/mist等价。 查看文件在终端中输入ls(小写LS)可查询当前目录下的文件。 ls -l可查看到更详细的输出 ls -a可查看隐藏文件 在上图中目录以浅蓝色字体显示，在ls -l中可以看到最左边有字母d。 进入目录在终端中输入cd 文件夹名可进入到某个文件夹内，相当于鼠标双击了某个文件夹。 cd ../可返回上一级目录 cd ~/或cd或cd /home/mist 可返回主目录 screen使用指南新建/启动会话输入 screen -SL 会话名 -Logfile 日志名 新建会话，会话名与日志名均可自定义 新建会话后并没有明显的提示(窗口会刷新一下)，其他与正常终端并无区别 在启动screen后输入screen -list时可以看到会话名与Attached的字样，说明此时激活了这个会话 解绑(detach)会话在screen会话中，先按下Ctrl-a后按d可解绑会话，相当于最小化窗口。 解绑后会提示detached from xxx.会话名 一般确认代码开始运行后就可以解绑会话了，解绑会话后可关掉命令行窗口。只要程序不报错，服务器不关机，代码就一直在后台运行。 解绑会话后输入screen -list可以看到会话名与detached的字样，说明此时会话在后台 恢复会话输入screen -dr 会话名可恢复之前解绑的会话，一般重新进入终端后使用此命令。 结束(terminate)会话在screen会话中，输入exit即可退出会话，相当于关闭窗口。 结束会话后会提示screen is terminating 运行py代码在运行代码前，需要通过以上三步进入到项目目录下，直到在ls中能看到需要运行的文件名。 本例需要运行的train.py文件，可以在ls中看到。 如果代码需要长时间运行，请使用screen挂到后台。如果有创建虚拟环境，则在运行程序前请使用对应的方法激活。建议在运行程序前使用nvidia-smi命令查询显卡是否空。 执行python 文件名.py即可开始运行，如果代码需要参数也可一并加上。 其他命令云存储相关在控制台-上传数据集中上传的文件在云存储中，挂载在服务器/data目录下，任意一台服务器都能访问到。 在服务器主目录下有个名为cloud的文件夹(/home/mist/cloud)，这个文件夹是云存储内的一个子文件夹 使用ls -l /data可查看云存储下的文件 使用cp -v /data/文件名 /home/mist/可将云存储内的文件复制到主目录下 使用unzip /data/文件名.zip -d /home/mist/可将云存储下的压缩包(仅zip文件)直接解压到主目录下 使用cp -v 文件名 /data/可将服务器的文件复制到云存储中 使用zip -r9 /data/压缩后的文件名.zip 要压缩的目录名可将服务器的文件夹压缩并直接保存到云存储中 查询类命令 lscpu 查询cpu型号 free -h 查询内存占用 df -h /home/mist/ 查询硬盘可用空间 du -hs 文件名 查询文件或文件夹总占用空间 nvcc -V 查询默认环境的cuda版本 which python 查询默认环境python的路径 top或htop或nmon 查询某个进程的资源占用情况 nvidia-smi 查询显卡相关占用情况 nvidia-smi输出如上图所示，主要关注 红框1所示的显存占用。由于部分机器有安装桌面操作系统，因此有几m-几十m左右的占用。 红框2所示的整体占用。 环境相关 pip list 查询pip中安装的包 pip install 包名 使用pip安装其他包 pip uninstall 包名 使用pip卸载某个包 sudo apt update; sudo apt install 包名 使用apt安装包 杀进程当没有程序正在跑，且用nvidia-smi查询到显存占用高时，有可能是之前的程序进程没有正常退出。此时需要清掉之前的残留进程以释放显存。 最无脑的释放方法是在控制台关掉服务器，再重新开机 可以使用ps x命令查询当前正在运行的进程名以及对应PID，如下图所示 可以看到当前有若干个python开头的命令正在运行，如粉色1框所示。 在每个进程的开头，有对应地进程PID，如绿色2框所示，此时在终端执行sudo kill &lt;PID&gt;即可杀掉对应的进程。 如果需要杀的进程很多，可以使用sudo pkill -x &lt;进程名&gt;命令。进程名如橙色3框所示， -x 代表完全匹配进程名，不加的话只要进程名里有python的命令都会被杀，比如Jupyter本身 本例执行sudo pkill -x python，可以看到执行完后显存已空"},{"title":"Jupyter使用教程","date":"2022-11-26T04:00:00.000Z","url":"/2022/11/26/Jupyter%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/","content":"概述Jupyter Lab中集成开发环境，可以用户编写代码、运行notebook(*.ipynb文件)、操作服务器终端，以及上传/下载文件等功能。 在控制台开机后点击左下角的“进入环境”按钮即可进入服务器的Jupyter环境。 界面介绍打开Jupyter后界面如下图所示，启动页可以点击左上角蓝色底的加号图标弹出。 浏览/下载文件在Jupyter左侧文件管理器中可以看到服务器中的文件。可双击打开文件，或右键下载。 由于Jupyter底层冲突，名为checkpoints的文件夹无法打开/删除。请手动重命名为其他名称(如checkpoint)或到服务器终端中访问 在文件管理器中进入项目目录后，通过启动页启动服务器终端时会自动将终端的当前路径设置为此目录。 在终端中输入pwd命令即可看到此目录的绝对路径，其他终端操作请参考终端使用教程。 Notebook 文件*.ipynb文件在Jupyter中可直接运行 注意notebook中执行的是Python代码而不是Linux终端代码 简要Linux命令可以在命令头加英文感叹号执行，比如nvidia-smi 一般不太建议在notebook中长时间执行程序，因为当单元格内输出变多后Jupyter本身速度会变慢，且刷新页面后实时输出可能不会保存。若需要长时间运行，请点击菜单栏文件-将notebook另存为，将拓展名改为.py后到服务器终端运行。 Python 文件*.py文件在Jupyter中只可编辑，不可直接运行。如需运行.py文件请使用服务器终端执行。具体请参考终端使用教程 服务器终端在启动页点击黑色的终端，或在文件-新建中选择终端。 注意是黑色的终端Terminal，而不是蓝色的Console 在Jupyter终端内，选中文本后Ctrl-c可复制，Ctrl-v可粘贴。 不选中文本按Ctrl-c会中断正在操作的命令 具体终端操作命令请移步终端使用教程。"},{"title":"SSH连接教程","date":"2022-11-25T04:00:00.000Z","url":"/2022/11/25/%E6%96%B0SSH%E8%BF%9E%E6%8E%A5%E6%95%99%E7%A8%8B/","content":"通过SSH连接可以进入到服务器执行各种操作，将会涉及到Linux命令，如不熟悉Linux命令请谨慎操作。 重要提示SSH连接遇到网络波动时会中断，前台运行的进程会被终止。 如果程序没有挂到后台或代码没有保存断点的话，您的程序很有可能因此白跑。 因此如果需要长时间运行程序，请务必使用nohup或screen挂到后台运行，并建议在代码中设置保存断点。 方法一：运行命令改为 nohup 原命令 &amp;，输出在nohup.out文件中方法二：(推荐!) 在运行程序前 先在终端中输入 screen -SL 会话名 -Logfile 日志名 新建会话 会话名与日志名自定。需要在运行程序前启动screen，开始运行后无法操作 之后输入需要执行的命令(如python 文件名.py)。输入 screen -dr 会话名 恢复会话；程序输出可恢复会话或查看日志文件 具体screen使用教程请参考终端使用教程 本机终端 Win10+, macOS, Linux 可用 下载私钥文件用户名.pem并放在用户目录下 Windows: C:\\Users\\&lt;账户名&gt;\\&lt;用户名&gt;.pem macOS: /Users/&lt;账户名&gt;/&lt;用户名&gt;.pem Linux: /home/&lt;账户名&gt;/&lt;用户名&gt;.pem 启动终端 Windows: 在开始菜单中搜索cmd或powershell macOS: 按下Command + 空格，在Spotlight中搜索终端 Linux: Ubuntu系统可用Ctrl + alt + t快捷键启动 在打开的终端窗口中粘贴SSH命令 初次连接机器时会询问是否接受服务器指纹，会有下图红框的提示。输入yes即可。 如果没有私钥文件，则会提示输入密码，如下图所示。 此时需要输入创建服务器时设置的服务器密码，输入过程中字符不会显示在屏幕上，输入完成后回车即可。 确认已连接成功连接上机器后会显示MistGPU及注意事项，同时终端标识符会变成如下图红框处所示。 其中红色的$字符表示可以在此处输入命令。 Termius Win7+, macOS, Linux 可用 从Termius官网下载后安装，打开后在Host边栏中依次选择Add - New Host 填写服务器信息在右侧边栏中一次填入以下信息 Label: 连接名称，任取，可选 Address: 服务器域名，必填 Port: SSH端口，必填 Username: 用户名，固定为mist 如果没有私钥，则将创建服务器时设置的服务器密码填入Password中 如果有私钥，则点击粉框6处的Set a Key按钮 连接到服务器配置完成后双击连接即可。初次连接服务器时会提示是否添加指纹，选择Add &amp; continue即可。 PuTTY Win7+ 可用 安装PuTTY PuTTY官网 清华镜像站 填写服务器信息在红框1处分别填入mist@服务器域名以及SSH端口 如果没有私钥，则点击右下角的Open按钮连接即可 如果有私钥，则进入粉框2处选择私钥文件用户名.ppk，如下图所示 PuTTY及WinSCP不支持.pem文件，请使用.ppk文件 选择好文件后点击右下角Open按钮连接。 初次连接服务器时会有下图提示，选择Accept即可 完成同上，连接成功后会有欢迎语以及注意事项，看到红色$符号后输入命令即可。 Xshell Win7+ 可用 安装Xshell在Xshell官网下载并安装Xshell，下载链接会发送到个人邮箱中。 新建配置点击左上角文件菜单栏中选择新建 名称：连接名称，任取 协议：SSH 主机：服务器域名(不包括mist@) 端口号：SSH端口 设置用户名及密码/私钥点击红框1处的用户身份验证，右侧用户名固定为mist 如果没有私钥，则在红框2中只勾选Password，并在上方填入创建服务器时设置的服务器密码 如果有私钥，则在红框2中只勾选Public Key，并在选中此项的情况下点击红框3中的设置 在弹出的Public key设置窗口中依次点击浏览，导入。选择.pem私钥文件确认即可 连接机器初次连接服务器时会有下图提示，选择接受并保存即可 "},{"title":"Pycharm配置教程","date":"2022-11-19T04:00:00.000Z","url":"/2022/11/19/Pycharm%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/","content":"前言本教程基于PyCharm 2022.2 Professional专业版，Community社区版不支持连接到远程服务器，故无法使用。 官网学生认证可免费获得专业版链接 Pycharm2022.2版本debug代码时有bug，如果有影响建议先降级到2022.1版本使用 特别说明PyCharm是调试代码的工具。若代码需要长时间运行，请到服务器终端中用screen挂到后台运行。具体可参考终端使用教程。 安装中文包PyCharm已有中文语言包，可在PyCharm设置 - Plugins中搜索Language Pack并安装，随后重启PyCharm即可生效。 配置SSH解释器(2022.2+)打开项目后，进入Pycharm设置，选择项目-Python解释器并在添加解释器中选择SSH 设置服务器信息依次填入服务器域名、SSH端口。用户名固定为mist 如果没有私钥，则将创建服务器时设置的服务器密码填入密码框中并下一步 如果有私钥，则点击密钥对按钮，点击红框出的文件夹图标选择.pem私钥文件后下一步 设置解释器路径选择系统解释器后，点击解释器右边的三个点，找到解释器路径 如果使用默认环境，则找到/usr/local/bin/python即可 如果使用conda虚拟环境，则需要找到激活环境后which python返回的路径，如下图所示 设置同步文件夹按下图所示，将远程路径设置为/home/mist。 如果需要同时部署多个项目，建议提前在服务器上新建文件夹，然后将远程路径设置到/home/mist/&lt;文件夹名&gt; 完成后点击下方的创建按钮即可。 配置SSH解释器(2022.1-)打开项目后，进入Pycharm设置，选择项目-Python解释器，点击右上角的齿轮按钮并选择添加 设置服务器信息选择SSH解释器并依次填入服务器域名、SSH端口。用户名固定为mist 如果没有私钥，则将创建服务器时设置的服务器密码填入密码框中并下一步 如果有私钥，则点击密钥对按钮，点击红框出的文件夹图标选择.pem私钥文件后下一步 设置解释器路径点击解释器一栏右侧的文件夹图标，找到解释器路径 如果使用默认环境，则找到/usr/local/bin/python即可 如果使用conda虚拟环境，则需要找到激活环境后which python返回的路径，如下图所示 设置同步文件夹按下图所示，将远程路径设置为/home/mist。 如果需要同时部署多个项目，建议提前在服务器上新建文件夹，然后将远程路径设置到/home/mist/&lt;文件夹名&gt; 设置好后点击下方的完成按钮即可。 完成 完成后Pycharm将开始上传文件并更新解释器索引。上传耗时取决于您的网络上行带宽；更新索引一般需要几分钟。 Pycharm默认会重复上传并覆盖服务器里已有的文件，可以到菜单栏工具-部署中点击选项修改。 取消选择覆盖最新文件，选上创建空目录即可。 完成后在Pycharm界面右下角，能看到红框1处所示当前的解释器已变为Remote Python，以及红框2处所示的部署服务器。 若需要换回本地环境运行，则分别点这两个地方，将解释器设置为本地的解释器，部署设置为无默认服务器 运行当右下角解释器为Remote Python时，点击运行/调试按钮即可使用服务器的算力执行程序 编辑配置在Pycharm界面右上角点击编辑配置，可以修改程序运行时需要的参数及环境变量 设置运行参数部分程序要求在终端中传入对应的参数，可在编辑配置页面的形参中设置对应地参数。 如原本命令为python train.py -net resnet152 -gpu -b 120，那么就在形参中写-net resnet152 -gpu -b 120 设置环境变量如果需要修改环境变量，则点击环境变量右边的小图标 将需要添加的环境变量以键值对的形式添加进去即可 启动服务器终端在菜单栏工具-部署中点击启动SSH会话即可打开服务器的终端 直接点击Terminal默认启动的是自己电脑的终端，注意不要混淆了 浏览/下载服务器中的文件在菜单栏工具-部署中点击浏览远程主机即可查看到服务器上的文件 进入/home/mist/文件夹后，右键点击文件即可下载到本地或执行其他操作 排查如果在使用pycharm过程中遇到了问题，则可以用下面的方法排查。 进入Pycharm设置，按下图所示点击选择全部显示 修改服务器端口/解释器路径(2022.2+) 删除已有的解释器，点击加号并选择SSH 在SSH连接中选择现有，并点击下图2所示的右侧的三个点 选择要修改的配置，设置好新端口后点测试连接。连接成功后确认，点击下一步。 选择系统解释器，点击解释器右侧的三个点，定位到新的地址后确认。 同步文件夹同上，设置到/home/mist下即可 完成 "},{"title":"图形界面连接教程","date":"2021-04-19T14:06:06.000Z","url":"/2021/04/19/%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2%E8%BF%9E%E6%8E%A5%E6%95%99%E7%A8%8B/","tags":["图形界面 远程桌面连接"],"content":"获取IP及端口在控制台的附加功能中点击使用帮助，复制图形界面处的IP及端口。 连接WindowsWindows平台使用自带的远程桌面连接即可，此应用可在开始菜单中搜索找到。 之后在计算机一栏中粘贴服务器IP:图形界面端口回车即可。如本例中输入gpu294.mistgpu.com:12602。 之后点击连接即可，如弹出证书警告点击是。 macOSmacOS用户需要先在应用商店中搜索远程桌面连接，下载后安装即可。 安装完成后打开应用，点击工具栏的➕，选择添加计算机。 之后在计算机名称中输入服务器IP:图形界面端口即可，同理本例中输入gpu294.mistgpu.com:12602。 添加完成后双击连接即可。连接时会要求输入用户名和密码。 用户名为mist 密码同SSH连接密码，为创建服务器时设置的 之后确认并同意证书即可使用了 LinuxUbuntu图形界面自带有Remmina应用可使用，如未安装此应用可使用官网提供的命令安装。 启动后选择RDP协议，输入服务器IP:图形界面端口回车即可，同理本例中输入gpu294.mistgpu.com:12602。 登录mac用户在连接时已经输入过用户名和密码，可跳过此步骤Windows和Linux用户连接后均有如下界面， 用户名为mist 密码同SSH连接密码，为创建服务器时设置的 使用若是初次连接服务器，在连接后会询问图形界面布局，此对话框请务必选择左边的Use default config，否则会变得十分难用。 在底部dock栏中可以依次打开终端，文件管理，浏览器 图形界面卡顿使用图形界面对本机以及服务器网速均有较高要求，如有卡顿可设置降低分辨率 点击远程桌面连接左下角的显示选项 点击显示后降低分辨率及颜色质量即可 "},{"title":"conda创建虚拟环境","date":"2021-02-03T06:00:00.000Z","url":"/2021/02/03/Conda%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/","tags":["miniconda"],"content":"前言本教程中使用的mamba命令在cuda11.6及更新版镜像中可用，旧版镜像请手动替换为conda mamba是conda的C++实现，速度更快。常用语法与conda并无区别 创建虚拟环境在终端中输入mamba create -n 环境名 -y即可，环境名可任取。 推荐在创建虚拟环境是顺带指定需要的python版本， 如mamba create -n 环境名 python=3.8 -y。 之后等待下载即可，下载完成时会有下图提示： 激活环境创建完成后的环境需要激活才可生效，使用mamba activate 环境名即可。激活成功后在终端提示符上边会出现(环境名)的提示。同时可以用以下命令检查python版本及路径(路径应当在miniconda目录中，而不是自带的/usr/local/bin)。 python -V which python 安装其他的包虚拟环境创建后不会继承默认环境里的包，意味着程序所需的包都需要在虚拟环境中重新安装。 继续在终端中输入mamba install 包名 -y安装即可 为确保包之间的兼容性，推荐用mamba而不是pip来安装 在Jupyter环境中使用虚拟环境 使用mamba activate 环境名激活环境 在虚拟环境内输入: mamba install ipykernel ipython_genutils -y 执行 python -m ipykernel install --user --name 虚拟环境名 --display-name &quot;显示名称&quot; 此命令中--name后的名称要和之前的环境名一致，--display-name后的名称可任取。 刷新Jupyter网页，之后点击左上角蓝色+号新建启动器即可看到虚拟环境了。 已有的ipynb文件可以点击右上角或菜单栏-内核-更改内核修改。 在PyCharm中使用conda创建的环境PyCharm具体配置教程可参考连接教程/#添加SSH解释器) 使用mamba activate 环境名激活环境 在虚拟环境内输入: which python，复制返回的路径。 将返回的路径填入SSH解释器中在解释器一栏(下图蓝框) 降级cuda版本在虚拟环境中可以通过安装不同版本的cudatoolkit来切换环境内的cuda版本。 注：RTX30系、A5000、A6000、A100等安培架构机型不支持降级到cuda11以下。 通过mamba search cudatoolkit可以看到可安装的版本。使用mamba install cudatoolkit=版本号 -y即可安装。 如果需要安装PyTorch或TensorFlow可跟随后面的教程一并安装，不需要现在装 虚拟环境内安装的cudatoolkit的版本就对应了cuda的版本，激活环境后输入mamba list确认此包已安装即可使用。 使用nvidia-smi命令查询的cuda版本为驱动最高支持的cuda版本，不代表环境的cuda版本。 使用nvcc -V命令查询到的cuda版本为默认pip环境的cuda版本，不是虚拟环境内的版本。 例：安装旧版本PyTorch在PyTorch官方网站找到对应PyTorch版本-Linux-conda部分的命令，并选择所需CUDA版本。 教程以安装PyTorch11.1, cuda=11.3为例： 激活环境后 (可选, 将命令开头的conda替换成mamba) 粘贴命令执行即可。 如果不需要torchvision和torchaudio可以从命令中去掉。 此步骤需要下载的包比较大，请耐心等待。 安装完成后可确认PyTorch版本为1.11.0，GPU可用，cuda版本为11.3，cudnn版本为8.2.0。 例：安装旧版本TensorFlow在TensorFlow官网确认需要安装的版本所需的cuDNN及CUDA版本 教程以安装tensorflow=2.6.0为例： 激活环境后执行 mamba install -c conda-forge cudatoolkit=&#123;CUDA版本&#125; cudnn=&#123;cuDNN版本&#125; -y 粘贴执行下面两条命令 通过pip安装TensorFlow pip install --upgrade pip pip install tensorflow==&#123;tf版本&#125; 安装完成后可确认TensorFlow版本为2.6.0，GPU可用 常见问题找不到conda: command not found在终端中手动执行 export PATH=$PATH:/mistgpu/miniconda/bin，之后执行conda init --all后重启终端 环境冲突(Found Conflicts)遇到冲突时一般会有类似下图的提示，若环境内装了很多包的话会卡在红框处。 此时可以Ctrl-c直接取消，也可在等待完成后查看具体哪些包直接有冲突。 解决方案包括但不限于： 重新创建虚拟环境，并将所有要用到的包放在一条命令内安装 放宽各个包版本要求 使用自定义源时404或403报错为了加快conda的下载速度，我们在环境中修改了默认镜像源。这可能导致使用其他自定义源时报错。 您可以在终端中使用rm ~/.condarc命令删除自定义配置后重试。 删除.condarc后将使用默认源下载包，速度会比使用镜像更慢。 降级默认环境的cuda(不推荐) 一般情况下不需要使用，如果虚拟环境里降级有问题必须降默认环境的cuda才考虑 搞砸了的话需要重新创建服务器 到nvidia官网并选择对应CUDA版本 教程以cuda 11.3.1为例，按下图所示依次选择Linux - x86_64 - Ubuntu - 1804 - runfile(local) 粘贴到服务器终端中执行 若下载速度慢，可以在自己电脑中下载后上传到机器中 阅读完EULA后根据提示输入accept后回车 根据提示把Driver去掉(上下键移动高亮到此处后按空格)后，移动到Install回车 下一个提示也回车，之后耐心等待退出即可 安装完成后会提示修改环境变量，需要添加以下两行到~/.zshrc末尾 推荐使用nano, nano ~/.zshrc，编辑后按ctrl-x，y，回车 完成后可输入nvcc -V确认版本 之后还需要在默认环境中卸载原来的PyTorch/Tensorflow并安装新的版本 "},{"title":"TensorBoard教程","date":"2020-07-27T04:23:00.000Z","url":"/2020/07/27/TensorBoard%E6%95%99%E7%A8%8B/","content":"TensorBoard官方文档 服务器端在控制台的附加功能中点击使用帮助，复制IP及开放端口。 接下来进入到服务器命令行中，输入 本例的开放端口是12605，日志文件在log/fit/下，则输入 tensorboard --host 0.0.0.0 --port 30324 --logdir log/fit 若有如下输出则表示成功启动： 本地端打开本地浏览器，在地址栏中输入 如本例输入 gpu294.mistgpu.com:12605 成功访问： 日志文件目录Tensorboard日志文件一般在代码中有设置，如果不确定的话可以找哪些文件夹下有events.out.tfevents文件 "},{"title":"Windows下上传和下载文件的使用教程","date":"2020-04-08T10:00:00.000Z","url":"/2020/04/08/Windows%E4%B8%8B%E4%B8%8A%E4%BC%A0%E4%B8%8E%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E6%95%99%E7%A8%8B/","content":"概述本文将主要介绍Windows平台下各种上传文件到服务器和从服务器下载文件的方法，首先是建议使用我们提供的云存储功能和Jupyter附加功能，然后是win自带的命令行scp的使用，最后是一些第三方软件的使用简介。 云存储为了减少用户创建服务器后准备数据带来的成本，我们提供了云存储的方式。用户提前上传数据到云存储后，开启任何一个服务器都能迅速准备好数据。 上传文件首先进入控制台左侧的上传文件处，可以点击“选择文件”进行文件选择，按住Ctrl可选择多个文件。上传文件支持断点续传，故不用担心大文件在上传中途断线，重新上传将会在某个记录点继续上传。要注意的是，我们暂时不支持上传文件夹或者＞30G的文件，原因是上传速度会比我们建议的方式慢，且太大的文件虽然可以断点续传，但是由于您个人网络问题上传太久的话，您的上传token会失效导致需要您重新操作，造成不必要的麻烦。因此我们建议将数据压缩为zip文件再上传。收到上传成功的提示后，数据便会挂载到服务器的/data目录下。 管理文件进入控制台左侧的上传文件处，可以看到“文件管理”按钮，点击便可以进入文件管理页面，可以一览您在云存储的所有文件，文件可批量删除，在该页面您也可查看当前存储总量和总存储费用。如果有些文件无法删除，可能是由于文件名的特殊字符导致的，可以直接使用 rm -rf 文件路径 进行删除。 从云存储下载到服务器可参考上上传数据集处的云存储使用说明。 zip文件：在终端里输入unzip /data/文件名.zip -d ~/，将文件名换成实际上传的文件名字即可。 任意文件：在终端里输入cp /data/文件名 ~/即可复制到服务器主目录(/home/mist)下，或将cp更换为rsync，如rsync /data/文件名 ~/从云存储复制到服务器的耗时取决于文件大小和服务器本身的下载速度，一般在5m/s左右。zip文件也可以复制到主目录下再解压。zip命令只可用于解压.zip格式的文件。 从服务器上传到云存储将文件复制到云存储的步骤和丛云存储下载类似： 压缩后保存到云存储中：终端里输入zip -rq9 /data/文件名.zip 目录名，即可将目录下的文件压缩成文件名.zip，存储在云存储中。 使用cp或rsync命令：cp 文件名 /data/或rsync 文件名 /data/即可。从服务器上传到云存储的耗时也取决于文件本身大小和服务器的上传速度。执行过程中请耐心等候，否则会造成文件损坏。 Jupyter点开服务器管理，在附加功能处看到我们提供的附加功能jupyter。Jupyter对于炼丹人来讲也是相当实用的，上传和下载文件功能俱全（上传文件速度会比使用云存储稍慢，上传小文件可以考虑用jupyter方便，大文件建议使用云存储） 上传使用Jupyter可直接上传指定文件到Jupyter的当前目录(默认为主目录)从附加功能里点开Jupyter的链接后，点下图所示的图标即可上传。 上传过程中可在底部看到进度条，等待进度条走完即可。 下载在Jupyter内右键点击需要下载的文件(不支持下载文件夹)后选择Download即可。若要下载文件夹则需要现在终端内使用unzip命令压缩。unzip -r9 保存后的文件名.zip 要压缩的目录名 scp命令scp命令推荐Linux，macOS用户使用，Windows下由于路径表示方式不同不推荐使用。使用scp命令上传需要在本机命令行中执行，不需要提前ssh连接服务器。 上传命令格式：scp -r -P端口号 要上传的文件/文件夹名 mist@服务器IP:目录 其中端口号，服务器IP可以在控制台的使用帮助中查看。以ssh mist@gpu193.mistgpu.xyz -p 20500这台机器为例，端口号为20500，服务器IP为gpu193.mistgpu.xyz 要上传的文件/文件夹名按需填写，目录为上传后的服务器路径。 如本地当前目录下有个名为access的文件夹，想要上传到服务器的主目录下，则需写scp -r -P 20500 access mist@gpu193.mistgpu.xyz:~/ 和ssh连接一样，第一次连接时需要输入yes同意密钥后再输入密码。 之后在服务器的主目录下即可看到access文件夹。 下载下载命令与上传命令类似，只需要对调本地和远程路径即可。如scp -r -P端口号 mist@服务器IP:目录或文件名 本地路径 其他软件MobaXterm在该下载链接获取该软件后安装打开。 第一步是点击“Session”来新建会话，在弹出来的设定窗口中选择上方的SFTP，在Basic Sftp settings进行服务器信息配置。以ssh mist@gpu28.mistgpu.xyz -p 40000为例，Remote host应填入gpu28.mistgpu.xyz，即服务器主机地址（一般在@后）；在Username中填入mist，即用户名（一般在@前）；最后将Port中的数字改成40000，即端口号（一般为-p后的数字），填充完如上图所示，然后点击下方的OK完成设定。完成后软件会试图连接，需要输入密码，输入在创建服务器时的密码后按下回车便能成功连接。成功连接后，可以查看到服务器的文件，随意拖拽本地文件到该软件中服务器一方可实现上传，将服务器中的文件拖拽出来可实现下载。 另一种方法就是参照上一个SSH使用教程，采用SSH方式进行连接，成功之后左侧会出现服务器文件列表（如上图所示），同样可以使用拖拽的方式上传和下载文件。 Xftp在该下载链接获取该软件的家庭和学校用户免费版本（建议在获取下载链接的时候选中“两者”，即下载Xshell和Xftp，前者是操作服务器的命令行窗口，后者是专门用于文件传输的），后安装打开。 第一步一样是新建会话，在弹出来的设定窗口中，名称可任意填写，协议选择SFTP。以ssh mist@gpu28.mistgpu.xyz -p 40000为例，主机应填入gpu28.mistgpu.xyz，端口号中的数字改为40000。下方可以填写用户名和密码，用户名即mist，密码就是创建服务器时输入的密码。填充完如上图所示，然后点击下方的“连接”完成设定并主动尝试连接。成功连接后，可以查看到服务器的文件，随意拖拽本地文件到该软件中服务器一方可实现上传，将服务器中的文件拖拽出来可实现下载。 WinSCP在该下载链接获取该软件后安装打开。 第一步一样是新建会话，以ssh mist@gpu28.mistgpu.xyz -p 40000为例，在弹出来的设定窗口中，主机名应填入gpu28.mistgpu.xyz，端口号中的数字改为40000，用户名填入mist，密码填入创建服务器时输入的密码，如上图所示。然后建议点击“保存”，并保存密码后登录，便可成功连接。成功连接后，可以查看到服务器的文件，随意拖拽本地文件到该软件中服务器一方可实现上传，将服务器中的文件拖拽出来可实现下载。 CyberduckmacOS用户可使用Cyberduck下载链接浏览并上传、下载文件。 下载安装后点击左上角open connection新建连接 连接类型选择sftp "}]